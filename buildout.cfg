[buildout]
extends =
    https://dist.plone.org/release/6.0.4/versions.cfg
    https://dist.plone.org/release/6.0.4/versions-ecosystem.cfg
    https://dist.plone.org/release/6.0.4/versions-extra.cfg
    https://raw.githubusercontent.com/IMIO/buildout.library/plone6/versions.cfg

show-picked-versions = true
extensions = mr.developer
parts =
    instance
    test
    code-analysis
    coverage
    test-coverage
    createcoverage
    translation
    omelette
    robot

develop = .


[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    Pillow
    collective.preventactions [test]

zcml =
    collective.preventactions:testing.zcml

environment-vars =
    zope_i18n_compile_mo_files true


[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'collective.preventactions', '--auto-color', '--auto-progress']


[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
directory = ${buildout:directory}/src/library
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg.,omelette
flake8-max-complexity = 15
flake8-ignore = Q000,E501,C812,P001,P002,B901,E722,S001,W503
return-status-codes = False


[coverage]
recipe = zc.recipe.egg
eggs = coverage


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755


[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage


[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[debug, reload]


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[translation]
recipe = infrae.i18nextract
packages  = collective.preventactions
output = ${buildout:directory}/src/collective/preventactions/locales
output-package = collective.preventactions
domain = collective.preventactions


[versions]
# Don't use a released version of collective.preventactions
collective.preventactions =
