[buildout]
extends =
    code-analysis.cfg

extensions = mr.developer

parts =
    instance
    test
    coverage
    test-coverage
    createcoverage
    translation
    omelette
    robot

develop = .
show-picked-versions = true

test-eggs = collective.preventactions[test]

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    Plone
    Pillow
    collective.preventactions

zcml =
    collective.preventactions:testing.zcml

environment-vars =
    zope_i18n_compile_mo_files true


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs =
    ${instance:eggs}
    ${buildout:test-eggs}
    robotframework-selenium2screenshots
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'collective.preventactions', '--auto-color', '--auto-progress']
environment = testenv


[testenv]
zope_i18n_compile_mo_files = true


[coverage]
recipe = zc.recipe.egg
eggs = coverage


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755


[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage


[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework[debug, reload]


[translation]
recipe = infrae.i18nextract
packages  = collective.preventactions
output = ${buildout:directory}/src/collective/preventactions/locales
output-package = collective.preventactions
domain = collective.preventactions


[versions]
# Don't use a released version of collective.preventactions
collective.preventactions =
